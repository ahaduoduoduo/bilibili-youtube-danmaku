name: 自动打包并发布多浏览器扩展

on:
    push:
        branches: [main]
        paths:
            - 'package.json' # 只有当 package.json 版本发生变化时才触发
    workflow_dispatch: # 支持手动触发

permissions:
    contents: write
    pull-requests: write

jobs:
    release:
        runs-on: ubuntu-latest

        steps:
            - name: 检出代码
              uses: actions/checkout@v4

            - name: 读取版本号
              id: get_version
              run: |
                  VERSION=$(cat package.json | jq -r '.version')
                  echo "version=$VERSION" >> $GITHUB_OUTPUT
                  echo "当前版本: $VERSION"

            - name: 检查是否已存在该版本的 Release
              id: check_release
              run: |
                  VERSION=${{ steps.get_version.outputs.version }}
                  if gh release view "v$VERSION" >/dev/null 2>&1; then
                    echo "exists=true" >> $GITHUB_OUTPUT
                    echo "版本 v$VERSION 的 Release 已存在，跳过发布"
                  else
                    echo "exists=false" >> $GITHUB_OUTPUT
                    echo "版本 v$VERSION 的 Release 不存在，继续发布"
                  fi
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: 安装依赖
              if: steps.check_release.outputs.exists == 'false'  
              run: npm ci

            - name: 创建多浏览器扩展包
              if: steps.check_release.outputs.exists == 'false'
              run: |
                  VERSION=${{ steps.get_version.outputs.version }}
                  CHROME_PACKAGE="B2Y-Chrome-v$VERSION.zip"
                  FIREFOX_PACKAGE="B2Y-Firefox-v$VERSION.zip"

                  # 构建 Chrome 版本
                  echo "🔨 构建 Chrome 扩展..."
                  npm run build
                  
                  # 打包 Chrome 版本
                  cd .output/chrome-mv3
                  zip -r "../../$CHROME_PACKAGE" .
                  cd ../..

                  # 构建 Firefox 版本  
                  echo "🔨 构建 Firefox 扩展..."
                  npm run build:firefox
                  
                  # 打包 Firefox 版本
                  cd .output/firefox-mv2
                  zip -r "../../$FIREFOX_PACKAGE" .
                  cd ../..

                  echo "✅ 扩展包创建完成:"
                  echo "📦 Chrome: $CHROME_PACKAGE"
                  echo "📦 Firefox: $FIREFOX_PACKAGE"
                  
                  echo "chrome_package=$CHROME_PACKAGE" >> $GITHUB_ENV
                  echo "firefox_package=$FIREFOX_PACKAGE" >> $GITHUB_ENV

            - name: 创建 Release
              if: steps.check_release.outputs.exists == 'false'
              run: |
                  VERSION=${{ steps.get_version.outputs.version }}
                  CHROME_PACKAGE="${{ env.chrome_package }}"
                  FIREFOX_PACKAGE="${{ env.firefox_package }}"

                  # 创建 Release 并上传多浏览器包
                  gh release create "v$VERSION" \
                    --title "v$VERSION - WXT 多浏览器支持" \
                    --generate-notes \
                    "$CHROME_PACKAGE" \
                    "$FIREFOX_PACKAGE"
                    
                  echo "✅ Release v$VERSION 创建成功，包含 Chrome 和 Firefox 版本"
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

            - name: 输出结果
              if: steps.check_release.outputs.exists == 'false'
              run: |
                  VERSION=${{ steps.get_version.outputs.version }}
                  echo "🎉 多浏览器扩展 v$VERSION 已成功构建并发布到 Release!"
                  echo "🌐 支持浏览器:"
                  echo "  ✅ Chrome (Manifest V3)"
                  echo "  ✅ Firefox (Manifest V2)" 
                  echo "🛠 构建技术: WXT Framework"
                  echo "📁 构建产物: .output/chrome-mv3/, .output/firefox-mv2/"

            - name: 跳过发布提示
              if: steps.check_release.outputs.exists == 'true'
              run: |
                  VERSION=${{ steps.get_version.outputs.version }}
                  echo "ℹ️  版本 v$VERSION 的 Release 已存在，本次跳过发布"
